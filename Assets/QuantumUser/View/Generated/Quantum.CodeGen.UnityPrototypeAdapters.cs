// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
//
// If you need to extend the classes generated to add
// fields or methods to them, please create partial
// declarations in another file.
// </auto-generated>
#pragma warning disable 0109
#pragma warning disable 1591


namespace Quantum.Prototypes.Unity {
  using Photon.Deterministic;
  using Quantum;
  using Quantum.Core;
  using Quantum.Collections;
  using Quantum.Inspector;
  using Quantum.Physics2D;
  using Quantum.Physics3D;
  using Byte = System.Byte;
  using SByte = System.SByte;
  using Int16 = System.Int16;
  using UInt16 = System.UInt16;
  using Int32 = System.Int32;
  using UInt32 = System.UInt32;
  using Int64 = System.Int64;
  using UInt64 = System.UInt64;
  using Boolean = System.Boolean;
  using String = System.String;
  using Object = System.Object;
  using FlagsAttribute = System.FlagsAttribute;
  using SerializableAttribute = System.SerializableAttribute;
  using MethodImplAttribute = System.Runtime.CompilerServices.MethodImplAttribute;
  using MethodImplOptions = System.Runtime.CompilerServices.MethodImplOptions;
  using FieldOffsetAttribute = System.Runtime.InteropServices.FieldOffsetAttribute;
  using StructLayoutAttribute = System.Runtime.InteropServices.StructLayoutAttribute;
  using LayoutKind = System.Runtime.InteropServices.LayoutKind;
  #if QUANTUM_UNITY //;
  using TooltipAttribute = UnityEngine.TooltipAttribute;
  using HeaderAttribute = UnityEngine.HeaderAttribute;
  using SpaceAttribute = UnityEngine.SpaceAttribute;
  using RangeAttribute = UnityEngine.RangeAttribute;
  using HideInInspectorAttribute = UnityEngine.HideInInspector;
  using PreserveAttribute = UnityEngine.Scripting.PreserveAttribute;
  using FormerlySerializedAsAttribute = UnityEngine.Serialization.FormerlySerializedAsAttribute;
  using MovedFromAttribute = UnityEngine.Scripting.APIUpdating.MovedFromAttribute;
  using CreateAssetMenu = UnityEngine.CreateAssetMenuAttribute;
  using RuntimeInitializeOnLoadMethodAttribute = UnityEngine.RuntimeInitializeOnLoadMethodAttribute;
  #endif //;
  
  [System.SerializableAttribute()]
  public unsafe partial class BallPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.BallPrototype> {
    public FPVector3 Velocity;
    public Quantum.QuantumEntityPrototype Paddle;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.BallPrototype prototype);
    public override Quantum.Prototypes.BallPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.BallPrototype();
      converter.Convert(this.Velocity, out result.Velocity);
      converter.Convert(this.Paddle, out result.Paddle);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class EnemyInfoPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.EnemyInfoPrototype> {
    public Quantum.QuantumEntityPrototype Entity;
    public FPVector3 Position;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.EnemyInfoPrototype prototype);
    public override Quantum.Prototypes.EnemyInfoPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.EnemyInfoPrototype();
      converter.Convert(this.Entity, out result.Entity);
      converter.Convert(this.Position, out result.Position);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class EnemyRegistryComponentPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.EnemyRegistryComponentPrototype> {
    [DynamicCollectionAttribute()]
    public Quantum.Prototypes.Unity.EnemyInfoPrototype[] ActiveEnemies = {};
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.EnemyRegistryComponentPrototype prototype);
    public override Quantum.Prototypes.EnemyRegistryComponentPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.EnemyRegistryComponentPrototype();
      converter.Convert(this.ActiveEnemies, out result.ActiveEnemies);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class HomingProjectileComponentPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.HomingProjectileComponentPrototype> {
    public Int32 RemainingBounces;
    public FP Speed;
    public FP HomingStrength;
    public QBoolean HasTarget;
    public Quantum.QuantumEntityPrototype CurrentTarget;
    public Quantum.QuantumEntityPrototype PreviousTarget;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.HomingProjectileComponentPrototype prototype);
    public override Quantum.Prototypes.HomingProjectileComponentPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.HomingProjectileComponentPrototype();
      converter.Convert(this.RemainingBounces, out result.RemainingBounces);
      converter.Convert(this.Speed, out result.Speed);
      converter.Convert(this.HomingStrength, out result.HomingStrength);
      converter.Convert(this.HasTarget, out result.HasTarget);
      converter.Convert(this.CurrentTarget, out result.CurrentTarget);
      converter.Convert(this.PreviousTarget, out result.PreviousTarget);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class PlayerInfoPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.PlayerInfoPrototype> {
    public Quantum.QuantumEntityPrototype Entity;
    public FPVector3 Position;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.PlayerInfoPrototype prototype);
    public override Quantum.Prototypes.PlayerInfoPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.PlayerInfoPrototype();
      converter.Convert(this.Entity, out result.Entity);
      converter.Convert(this.Position, out result.Position);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class PlayerRegistryComponentPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.PlayerRegistryComponentPrototype> {
    [DynamicCollectionAttribute()]
    public Quantum.Prototypes.Unity.PlayerInfoPrototype[] ActivePlayers = {};
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.PlayerRegistryComponentPrototype prototype);
    public override Quantum.Prototypes.PlayerRegistryComponentPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.PlayerRegistryComponentPrototype();
      converter.Convert(this.ActivePlayers, out result.ActivePlayers);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class ProjectilePrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.ProjectilePrototype> {
    public Quantum.QuantumEntityPrototype Owner;
    public FP Damage;
    public Int32 HitsToDestroy;
    public FP Velocity;
    public FP Elapsed;
    public FP TimeToLive;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.ProjectilePrototype prototype);
    public override Quantum.Prototypes.ProjectilePrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.ProjectilePrototype();
      converter.Convert(this.Owner, out result.Owner);
      converter.Convert(this.Damage, out result.Damage);
      converter.Convert(this.HitsToDestroy, out result.HitsToDestroy);
      converter.Convert(this.Velocity, out result.Velocity);
      converter.Convert(this.Elapsed, out result.Elapsed);
      converter.Convert(this.TimeToLive, out result.TimeToLive);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class ShootingWeaponComponentPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.ShootingWeaponComponentPrototype> {
    public Quantum.QuantumEntityPrototype OwnerEntity;
    public AssetRef<EntityPrototype> ProjectilePrefab;
    public Int32 FireCooldown;
    public Int32 FireCdTicks;
    public FP MuzzleOffset;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.ShootingWeaponComponentPrototype prototype);
    public override Quantum.Prototypes.ShootingWeaponComponentPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.ShootingWeaponComponentPrototype();
      converter.Convert(this.OwnerEntity, out result.OwnerEntity);
      converter.Convert(this.ProjectilePrefab, out result.ProjectilePrefab);
      converter.Convert(this.FireCooldown, out result.FireCooldown);
      converter.Convert(this.FireCdTicks, out result.FireCdTicks);
      converter.Convert(this.MuzzleOffset, out result.MuzzleOffset);
      ConvertUser(converter, ref result);
      return result;
    }
  }
}
#pragma warning restore 0109
#pragma warning restore 1591
